import type { ChangeEvent } from 'preact/compat';
import { useState } from 'preact/hooks';
import Fuse from 'fuse.js';
import IconActors from './IconActors';
import IconMalwares from './IconMalware';

export default function Search({
    itemsMalwareFamilies,
    itemsThreatActors,
}: {
    itemsMalwareFamilies: any[],
    itemsThreatActors: any[],
}) {
    const [query, setQuery] = useState("");
    const [results, setResults] = useState<any[]>([]);

    // Fuse options
    const options = {
        keys: [
            'data.title',
            'data.aka',
            'data.description',
            'data.features',
            'data.identified',
            'data.platforms',
            'data.countries',
            'slug'
        ],
        includeMatches: true,
        minMatchCharLength: 2,
        threshold: 0.5,
    };
    
    const fuse = new Fuse(itemsMalwareFamilies.concat(itemsThreatActors), options);

    const handleChange = async (e: ChangeEvent<HTMLInputElement>) => {
        setQuery((e.target as HTMLInputElement).value);

        const results = fuse
            .search(query)
            .map((res) => res.item);
        setResults(results);

        // remove 'hidden' class
        document.querySelector('.search-results')?.classList.remove('hidden');
    }

    return (
        <div class="relative hidden md:block w-[240px]">
            <input
                type="text"
                placeholder="Search..."
                value={query}
                onInput={handleChange}
                class="w-full bg-slate-800 border-none rounded outline-none p-2"
            />

            {/* Search Results */}            
            {results.length > 0 ? (
                <div
                    class="
                        search-results
                        absolute top-10 left-0 z-[-1]
                        w-full max-h-[400px] bg-dark-light
                        flex flex-col overflow-y-auto
                    "
                >
                    {results.map((item: any) => (
                        <a
                            href={`/${item.collection}/${item.slug}`}
                            class="
                                p-2 text-md hover:bg-dark-light-super flex items-start gap-x-2
                            "
                        >
                            {item.collection === 'malware-families' ? (
                                <IconMalwares color="var(--color-red)" size="1.4" className="" />
                            ) : item.collection === 'threat-actors' ? (
                                <IconActors color="var(--color-red)" size="1.4" className="" />
                            ) : null}
                            <div class="flex flex-col flex-1 break-all">
                                <span class="text-slate-400">{item.data.title}</span>
                                {item.data.aka != null ? (
                                    <span class="text-sm text-slate-500">
                                        a.k.a. {item.data.aka.join(', ')}
                                    </span>
                                ) : null}
                            </div>
                        </a>
                    ))}
                </div>
            ) : null}
            {/* /Search Results */}
        </div>
    )
}
