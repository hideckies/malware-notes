---
const { frontmatter } = Astro.props;
---

<table>
    <tbody>
        {frontmatter.identified ? (
            <tr>
                <th scope="row">Identified</th>
                <td>
                    <span>{frontmatter.identified}</span>
                </td>
            </tr>
        ) : null}
        {frontmatter.motivations ? (
            <tr>
                <th scope="row">Motivations</th>
                <td>
                    {frontmatter.motivations.map((motivation: string, idx: number) => (
                        <>
                        <a
                            href={`/threat-actors/motivations/${motivation}`}
                            class="underline text-slate-300 hover:text-white"
                        >
                            {motivation}
                        </a>
                        {idx == frontmatter.motivations.length-1 ? null : <span>, </span>}
                        </>
                    ))}
                </td>
            </tr>
        ) : null}
        {frontmatter.countries ? (
            <tr>
                <th scope="row">Countries</th>
                <td>
                    <span>{frontmatter.countries.join(', ')}</span>
                </td>
            </tr>
        ) : null}
        {frontmatter.affiliated ? (
            <tr>
                <th scope="row">Affiliated</th>
                <td>
                    <span>{frontmatter.affiliated.join(', ')}</span>
                </td>
            </tr>
        ) : null}
        {frontmatter.attack_vectors ? (
            <tr>
                <th scope="row">Attack Vectors</th>
                <td>
                    <span>{frontmatter.attack_vectors.join(', ')}</span>
                </td>
            </tr>
        ) : null}
         {frontmatter.malwares ? (
            <tr>
                <th scope="row">Malwares Used</th>
                <td>
                    {frontmatter.malwares.map((malware: string, idx: number) => (
                        <>
                        <a
                            href={`/malware-families/${malware.toLowerCase().replace(/[^a-z0-9-_]/g, '')}.html`}
                            class="underline text-slate-300 hover:text-white"
                        >
                            {malware}
                        </a>
                        {idx == frontmatter.malwares.length-1 ? null : <span>, </span>}
                        </>
                    ))}
                </td>
            </tr>
        ) : null}
        {frontmatter.targets ? (
            <tr>
                <th scope="row">Targets</th>
                <td>
                    <ul>
                        {frontmatter.targets.map((target: string) => (
                            <li>{target}</li>
                        ))}
                    </ul>
                </td>
            </tr>
        ) : null}
    </tbody>
</table>